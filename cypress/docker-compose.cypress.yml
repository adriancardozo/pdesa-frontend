x-ml: &ml-config
  ML_CLIENT_ID: ${ML_CLIENT_ID}
  ML_CLIENT_SECRET: ${ML_CLIENT_SECRET}
  ML_URL: 'https://api.mercadolibre.com'
  ML_ACCESS_TOKEN: ${ML_ACCESS_TOKEN}
  ML_REFRESH_TOKEN: ${ML_REFRESH_TOKEN}

x-compose-jwt: &jwt-config
  JWT_SECRET: ${JWT_SECRET}
x-compose-mssql: &mssql-config
  MSSQL_PASSWORD: &MSSQL_PASSWORD ${MSSQL_PASSWORD}
  MSSQL_DB: &MSSQL_DB ${MSSQL_DB}
  MSSQL_HOST: ${MSSQL_HOST}
  MSSQL_PORT: ${MSSQL_PORT}
  MSSQL_USER: ${MSSQL_USER}
  MSSQL_SYNCHRONIZE: ${MSSQL_SYNCHRONIZE}
  MSSQL_LOGGING: ${MSSQL_LOGIN}
  MSSQL_ENCRYPT: ${MSSQL_ENCRYPT}
  MSSQL_TRUST_CERT: ${MSSQL_TRUST_CERT}

services:
  mssql:
    image: 'mcr.microsoft.com/mssql/server@sha256:ea73825f3d88a23c355ac2f9fdc6bd960fec90171c12c572109b36a558f77bb8'
    ports:
      - '1433:1433'
    healthcheck:
      test:
        - 'CMD-SHELL'
        - "/opt/mssql-tools18/bin/sqlcmd -U sa -P $$MSSQL_SA_PASSWORD -Q 'SELECT 1' -C && /opt/mssql-tools18/bin/sqlcmd -U sa -P $$MSSQL_SA_PASSWORD -Q 'CREATE DATABASE $$MSSQL_DB' -C"
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_SA_PASSWORD: *MSSQL_PASSWORD
      MSSQL_DB: *MSSQL_DB
    networks:
      - pdesa

  backend:
    build:
      context: ../../pdesa-backend
      dockerfile: dockerfile
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      <<: [*mssql-config, *ml-config, *jwt-config]
    restart: always
    depends_on:
      mssql:
        condition: service_healthy
    networks:
      - pdesa

networks:
  pdesa:
